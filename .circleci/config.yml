version: 2.1
jobs:
  build:
    docker:
      - image: circleci/python:3.6
      - image: redis
    steps:
      - checkout
      - run: pipenv install -d -e .
      - run: pipenv run rc
      - run:
          name: Run Test Suite
          command: |
            pipenv run make test
      - run: pipenv run codecov
  test-python-install:
    parameters:
      version:
        type: string
        default: latest
    docker:
      - image: circleci/python:<< parameters.version >>
    steps:
      - checkout
      - run: pipenv install -d -e .
      - run: pipenv run rc
      - run:
          name: Run Test Suite
          command: |
            pipenv run make test
      - run:
          name: Smoke Test Install
          command: |
            python --version
            sudo pip3 install relaycommander
  deploy:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - run:
          name: install python dependencies
          command: |
            pipenv install -e .
            pipenv install twine
      - run:
          name: verify git tag vs. version
          command: |
            pipenv run python setup.py verify
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = mpartida" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: create packages
          command: |
            pipenv run python setup.py sdist bdist_wheel
      - run:
          name: upload to pypi
          command: |
            pipenv run twine upload dist/*

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - test-python-install:
          version: "3.4"
          requires:
            - build
      - test-python-install:
          version: "3.5"
          requires:
            - build
      - test-python-install:
          version: "3.6"
          requires:
            - build
      - test-python-install:
          version: "3.7"
          requires:
            - build
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/